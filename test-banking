

#Import packages
from __future__ import division
from sklearn.linear_model import LinearRegression
from sklearn.feature_selection import VarianceThreshold
import matplotlib.pyplot as plt
from sklearn.feature_selection import RFE
from sklearn.linear_model import Lasso
from sklearn.ensemble import RandomForestClassifier
import numpy as np
import pandas as pd
import csv

#Import dataset (Train)
banking_train = pd.read_csv("/Users/flavioclesio/Documents/Github/learning-space/data-science-puzzle/train.csv")

#Import dataset (Test)
banking_test = pd.read_csv("/Users/flavioclesio/Documents/Github/learning-space/data-science-puzzle/test.csv")

#Output file
output_file = 'submission_prediction.csv'

#Last 5 lines to check if the data is ok!
banking_train.tail()

#See the CSV file
print (banking_train)
#[24976 rows x 108 columns]

#See the CSV file
print (banking_test)
#[24976 rows x 107 columns]

#See the head of file
banking_train.head()

#Check Data types
banking_train.dtypes

##Get information about the dataset
banking_train.info

##Get info about rows and colunms 
banking_train.shape
#Out: (24976, 108)


#I executed attrribute selection in weka to see the more important variables
#The filter is weka.filters.supervised.attribute.AttributeSelection -E "weka.attributeSelection.CfsSubsetEval -P 1 -E 1" -S "weka.attributeSelection.BestFirst -D 1 -N 5"

#The main atributes are:

016399044a
023c68873b
04e7268385
06888ceac9
087235d61e
136c1727c3
174825d438
1f3058af83
1fa099bb01
25bbf0e7e7
2719b72c0d
2a457d15d9
2bc6ab42f7
2d7fe4693a
3df2300fa2
3e200bf766
49756d8e0f
56371466d7
5b862c0a8f
5f360995ef
6516422788
65aed7dc1f
6db53d265a
77b3b41efa
7841b6a5b1
7fe6cb4c98
87b982928b
8a21502326
8c2e088a3d
8f5f7c556a
96c30c7eef
96e6f0be58
98475257f7
9a575e82a4
a14fd026ce
a24802caa5
ae08d2297e
aee1e4fc85
bdf934caa7
beb6e17af1
c0c3df65b1
c58f611921
d035af6ffa
d2c775fa99
dcfcbc2ea1
e7ee22effb
e86a2190c1
ea0f4a32e3
ed7e658a27
f013b60e50
f0a0febd35
fbf66c8021
fe0318e273
fe8cdd80ba
target




# visualize the relationship between the features and the response using scatterplots (Part 1)
fig, axs = plt.subplots(1, 6, sharey=True)

banking_train.plot(kind='scatter', x='0342faceb5', y='target', ax=axs[0], figsize=(16, 8))
banking_train.plot(kind='scatter', x='072b7e8f27', y='target', ax=axs[1])
banking_train.plot(kind='scatter', x='0b846350ef', y='target', ax=axs[2])
banking_train.plot(kind='scatter', x='016399044a', y='target', ax=axs[3])
banking_train.plot(kind='scatter', x='04e7268385', y='target', ax=axs[4])
banking_train.plot(kind='scatter', x='06888ceac9', y='target', ax=axs[5])


#Fit predictors

predictors = ["016399044a","04e7268385","06888ceac9","087235d61e","136c1727c3"
,"174825d438","1f3058af83","1fa099bb01","25bbf0e7e7","2719b72c0d","2a457d15d9","2bc6ab42f7"
,"2d7fe4693a","3df2300fa2","3e200bf766","49756d8e0f","56371466d7","5b862c0a8f","5f360995ef"
,"6516422788","65aed7dc1f","6db53d265a","77b3b41efa","7841b6a5b1","7fe6cb4c98","87b982928b"
,"8a21502326","8c2e088a3d","8f5f7c556a","96c30c7eef","96e6f0be58","98475257f7","9a575e82a4"
,"a14fd026ce","a24802caa5","ae08d2297e","aee1e4fc85","bdf934caa7","beb6e17af1","c0c3df65b1"
,"c58f611921","d035af6ffa","d2c775fa99","dcfcbc2ea1","e7ee22effb","e86a2190c1","ea0f4a32e3"
,"ed7e658a27","f013b60e50","f0a0febd35","fbf66c8021","fe0318e273","fe8cdd80ba"]
 
 
 
numEstimators = 1000
model = RandomForestClassifier(numEstimators)
model.fit(banking_train[predictors], banking_train["target"])



predictedFeatures = model.predict(banking_test[predictors])


finalData = pd.DataFrame({
        "Id": banking_test["id"],
        "target": predictedFeatures
    })